* {
    /* khai báo font của google */
    font-family: 'Montserrat', sans-serif;
    margin: 0;
    padding: 0;
    /* nhờ thuộc tính giúp thêm padding đảm bảo chiều dài tránh tình trạng rớt xuống */
    box-sizing: border-box;
    /* kích thước mặc định là 16px, không cần thêm cũng được */
    /* nếu khai báo fontsize 18px thì 1rem = 18px, còn không mặc định 1rem = 16px */
    /* sau này sử dụng rem thì chỉ cần thay đổi giá trị fontsize sẽ tự động thay đổi hêt những phần còn lại */
    font-size: 16px;
    /* thuộc tính khi ấn vô menu sẽ tượt xuống mượn */
    scroll-behavior: smooth;
}

body {
    color: #212529;
    /* khoảng cách kí tự chữ: letter-spacing, khoảng cách chữ word-spacing */
    letter-spacing: 1px;
    background-color: white;
}

/* Khai báo button dùng chung cho cả website */
button {
    background-color: rgb(126, 20, 85);
    border: 1px solid white;
    color: white;
    /* khoảng cách chữ cái */
    letter-spacing: 1px;
    /* thay đổi chuyển độc hover */
    transition: all .5s;

}

/* Khai báo chung cho thẻ tiêu đề */
h2 {
    font-size: 2rem;
    letter-spacing: 2px;
    text-align: center;
    padding: 48px 0;
    /* viết hoa all chữ */
    text-transform: uppercase;
}

/* header */
header {
    background-color: rgb(56, 39, 78);
    color: white;
    /* khai báo để menu đi theo khi trượt */
    position: fixed;
    /* khi sử dụng fixed thì sẽ làm mất kích thước của thẻ menu nên phải thêm lại kích thước */
    width: 100%;
    /* vấn đề xảy ra với position làm cho các thuộc tính của position bên dưới phần header, phải khai báo index để lớn để đè lại, set 1 số tương đối */
    z-index: 100;
}

.header__content {
    padding: 1.6rem 0;
    width: 70%;
    /* căn 2 bên dùng margin auto để đẩy khối vô giữa */
    margin: 0 auto;
    /* Kỹ thuật flex để đưa lên hàng ngang */
    /* flex phải khai báo trong thành phần cha chứ thẻ con, khác float khai báo trong thẻ con */
    display: flex;
    /* justify-content buộc phải đi vs display flex, để căn 2 khối */
    /* space-around là canh ngang sát 2 bên trái phải */
    justify-content: space-around;
    /* align-items dùng để căn dọc */
    align-items: center;
}

.header__content p {
    font-size: 2.3rem;
    font-weight: 505;
}

.header__content ul {
    list-style: none;
    text-decoration: none;
}

.header__content li {
    display: inline;
}

.header__content li a {
    text-decoration: none;
    color: white;
    font-size: 0.75rem;
    padding: 0 1.25rem 0;
    font-weight: bold;
    letter-spacing: 1px;
    /* thuộc tính transition-proparty: chiều dài thì with, transition-duration: thời gian xảy ra hiệu ứng, transition-delay: bắt đợi bao lâu mới chuyển hiệu ứng */
    /* muốn chuyển đổi thay đổi màu sắc, khai báo color */
    transition-property: color;
    transition-duration: 0.5s;
    /* hoặc sử dụng transiton: all 0.5s */
}

.header__content li a:hover {
    color: rgb(165, 24, 47);
}

.header__content ul .active a {
    color: rgb(165, 24, 47);
}

/* 2. carousel */
.carousel {
    background-image: url(../img/b3.jpg);
    height: 800px;
    background-size: cover;
    background-repeat: no-repeat;
    background-position: center;
    /* khai báo thẻ cha để chỉnh thành phần bên trong */
    /* position: relative; */
    /* căn giữa cho thẻ con */
    text-align: center;
    color: white;
    /* Căn giữa thẻ con */
    /* thẻ cha gắn flex chỉ được 1 thẻ con trực tiếp */
    display: flex;
    /* căn giữa ngang */
    justify-content: center;
    /* căn giữa theo chiều dọc */
    align-items: center;
}

.carousel__content h1 {
    font-weight: bold;
    font-size: 2rem;
}

.carousel__content p {
    padding: 20px 0;
}

.carousel__content button {
    font-size: 0.7rem;
    padding: 10px 30px;
    /* làm cong góc button */
    border-radius: 5px;
}

.carousel__content button:hover {
    color: black;
    /* đổi màu viền */
    border-color: pink;
    background-color: white;
    /* -------------------------- */
    /* đăng kí cho chuyển động updown đã định nghĩa dưới keyfram */
    /* animation: name duration timing-function delay iteration-count direction fill-mode; */
    /* name là tên--duration là khoảng tg xảy ra chuyển động--timing-function là biết trong khoảng tg thì chuyển động ntn, đều (linear) hay nhanh trước chậm sau(ear-out), chậm trước nhanh sau (ear-in), đầu chậm rồi nhanh và kết thúc chậm dần(ear), bắt đầu và kết thúc chậm(ear-in-out)--delay là chờ rồi mới thực hiện, interation-count là chu kì lặp lại-mặc định là 1 hoặc khai báo infinite là lặp lại vô cực--direction: reverse là chuyển động ngược từ to lên form, alternate là lần thứ nhất đi từ form sang to lần thứ 2 đi từ to lên form. alternate-reverse sẽ ngược của alternate--fill-mod: backwards sẽ di chuyển từ to sang form và giữ giá trị của form, kể cả màu sắc,forwards ngược lại backwrads, bold là vừa back vừa for */
    animation: updown .5s linear 0s 1 forwards;
}

/* 3 Intro */

.intro {
    /* Khai báo grid cho thẻ cha */
    display: grid;
    /* khai báo 4 cột nên mỗi cột 25%
    grid-template-columns: 25% 25% 25% 25%; */
    /* vì 4 cột giống nhau nên có thể khai báo */
    /* grid-template-columns: repeat(4,25%); */
    /* Hoặc khai báo fr, thì 1 ô sẽ là 1/4 */
    grid-template-columns: repeat(4, 1fr);
    /* grid-template-columns: repeat(3,1fr); 3 cột mỗi cột là 1/3 */
    /* Nên sử dụng đơn vị fr nhiều trong grid vì chia số lẻ sẽ tự chia*/
}

/* class chia cột cho hình ở hàng 1 */
.intro__ab1 {
    /* hàm gom cột */
    /* để gom thì xác định đc số line bắt đầu, số line kết thúc, số cột item đó chiếm*/
    /* vì có 4 cột nên sẽ có 5 line */
    /* hình này sẽ bắt đầu ở line 2 kết thúc ở line 4 và chiếm 2 cột */
    /* grid-column: 2 / 4; */
    /* hoặc viết bắt đầu ở line 2 và chiếm 2 cột */
    grid-column: 2 / span 2;
}

/* class chia cột ở hàng 2 */
.intro__tr2 {
    grid-column: 1 / span 2;
}

/* class chia cột hình hàng 3 */
.intro__ab4 {
    grid-column: 3 / span 2;
}

/* Xử lý phần hình */
.intro__item img {
    width: 100%;
    /* đổi thành định dạng block để không có khoảng hở dưới hình */
    display: block;
}

.intro__item {
    /* Căn chữ chung cho các ô */
    display: flex;
    /* căn giữa ngang, trong trường hợp này k có tác dụng, bởi vì sử dụng justify khi thẻ con không chiếm 100% kích thước thẻ cha, vì lúc nãy đã khai báo chiều ngang thẻ con 100% nên không cần sử dụng */
    /* justify-content: center; */
    /* căn giữa theo chiều dọc */
    align-items: center;
    text-align: center;
}

.intro__item h3 {
    color: white;
    font-size: 1.5rem;
    font-weight: 700;
    margin-bottom: 16px;
}

.intro__item p {
    color: white;
    font-size: 0.8rem;
    padding: 0 20px;
    /* khoảng cách các dòng chữ */
    line-height: 29px;
}

/* Đổi màu sắc của hình có thể gọi class theo firt, nth(3) */
/* thẻ con thứ nhất của thẻ cha intro trùng màu thẻ con thứ 8 của thẻ cha intro */
.intro .intro__item:first-child,
.intro .intro__item:nth-child(8) {
    background-color: #4e2a84;
}

/* thẻ con thứ 3 của thẻ cha intro */
.intro .intro__item:nth-child(3) {
    background-color: #ff0e83;
    ;
}

/* thẻ con thứ 4 của thẻ cha intro */
.intro .intro__item:nth-child(4) {
    background-color: #ed6498;
    ;
}

/* thẻ con thứ 6 của thẻ cha intro */
.intro .intro__item:nth-child(6) {
    background-color: #836eaa;
    ;
}

/* kỹ thuật flex áp dụng khi thấy bố cục đơn giản, chỉ muốn item con nằm trên cùng 1 hàng giống menu */
/* kĩ thuật grid khi thấy cái nào có gom hàng gom cột thì sử dụng và các bố cục phức tạp giống table, trong phần intro thì flex vẫn sử dụng được khi chia từng thành phần thanh 3 div con lên 1 hàng, trong mỗi div con sẽ có các thành phần con nữa nên sẽ làm bố cục dài */
/* kĩ thuật float đều làm được cho flex và grid, nhưng có nhiều nhược điểm phức tạp, nên khi nào cần sử dụng các trình duyệt cũ thì mới sử dụng */

/* 4. number */
/* tìm thẻ cha gần nhất của các item */
.number__content {
    display: flex;
    width: 70%;
    margin: auto;
    /* căn đều theo hàng ngang */
    justify-content: space-around;
    background-color: white;
    /* Khoảng cách chữ */
    letter-spacing: normal;
    /* khoảng cách các dòng chữ */
    line-height: 29px;
    text-align: center;
}

/* lấy loại thẻ p đầu tiên ra dùng p:first of type, bất chấp thẻ đầu tiên là thẻ loại khác, chỉ cần quan tâm thẻ loại đầu tiên là thẻ p */
.number__item p:first-of-type {
    font-size: 2rem;
    color: rgb(56, 39, 78);
    /* giá trị font-weight từ 100-900 */
    font-weight: 600;
    padding-top: 24px;
}

/* tìm kiếm loại thẻ p tiếp theo dùng p:nth-last-of-type() */
.number__item p:last-of-type {
    font-size: 1.4rem;
    font-weight: 700;
    /* khoảng cách từng chữ */
    letter-spacing: 4px;
    padding: 24px 0;
}

/* 5.services */
.services {
    background-image: url(../img/s1.jpg);
    height: 540px;
    background-repeat: no-repeat;
    background-size: cover;
    background-position: top;
}

/* xử lý thẻ icon */
/* sử dụng thêm 1 thẻ div circle hoặc xét trực tiếp giá trị chiều cao dọc, boder-radius cho thẻ i đều được */
.circle {
    background-color: white;
    border: rgb(56, 39, 78) solid 1px;
    width: 80px;
    height: 80px;
    /* Bo góc hình */
    border-radius: 50%;
    /* dùng margin auto để căn thẻ circle ra giữa thẻ cha giống text-align center của chữ */
    margin: 0 auto;
}

.circle i {
    /* sử dụng padding-top để căn giữa icon */
    /* padding-top: 15px; */
    /* hoặc sử dụng line-height xét cho bằng với chiều cao của thẻ circle thì sẽ căn giữa theo chiều dọc*/
    line-height: 80px;
    font-size: 3rem;
    color: #2f0968;
    /* xử lý hiệu ứng chuyển động của hover */
    transition-property: color;
    transition-duration: 1s;
}

/* xử lú hover cho icon */
.circle i:hover {
    color: rgb(126, 20, 85);
}

/* vì rê chuột vô thẻ item thì icon cũng hover nên sẽ gán hover cho thẻ cha và thay đổi thuộc tính của thẻ con icon */
.services__item:hover i {
    color: rgb(126, 20, 85);
}

/* ----------------- */
.services h2 {
    color: white;
}

.services__content {
    /* xử dụng flex căn đều nội dung vô giữa */
    display: flex;
    width: 80%;
    justify-content: space-around;
    align-content: center;
    margin: 0 auto;
    text-align: center;
}

/* xử lý tiêu đề thẻ con */
.services__item h3 {
    font-size: 1.2rem;
    padding-top: 15px;
}

/* xử lý nội dung thẻ con */
.services__item p {
    font-size: 0.8rem;
    /* khoảng cách từng hàng */
    line-height: 25px;
    font-weight: 550;
    padding: 15px 0;
}

/* xử lý button */
.services__item button {
    font-size: 0.7rem;
    padding: 10px 20px;
    /* làm cong góc button */
    border-radius: 5px;
}

.services__item button:hover {
    color: black;
    /* đổi màu viền */
    border-color: pink;
    background-color: white;
}

/* 6. Gallery */
.gallery__content {
    /* khai báo grid ở thẻ chứ toàn bộ bố cục hình là thẻ item */
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    /* khai báo khoảng cách giữa các hình */
    /* sử dụng grid-gap nhưng sẽ ít trình duyệt hỗ trợ, và các trình duyệt phải mới */
    /* nên sử dụng gap, khoảng cách bên trong nội bộ của nó, chứ không có khoảng cách với thẻ cha giống margin, giá trị giống margin */
    gap: 30px;
    /* xét khoảng cách so với thẻ cha */
    padding: 0 15px;
}

.gallery__item:first-child {
    grid-column: 1 / span 2;
}

.gallery__item:nth-child(6) {
    grid-column: 3 / span 2;
}

.gallery__item img {
    /* xét lại chiều cao để không bị rộng quá thẻ cha */
    width: 100%;
    /* xét chiều dọc để vừa thẻ cha */
    height: 100%;
    /* xét cho thành khối block để không bị ở dưới */
    display: block;
}

/* xử lý phần tiêu đề trên hình */
.gallery__item {
    position: relative;
    /* ẩn đi hết tất cả các thẻ con bị lố ra vùng của thẻ cha, bởi vì cawfi đặt ban đầu thẻ p dịch xuống qua vùng của thẻ cha, nên sẽ bị hiện tượng hover khi chưa đưa chuột vô thẻ cha */
    overflow: hidden;
}

/* overlay phủ trên thẻ item */
.gallery__overlay {
    position: absolute;
    top: 0;
    left: 0;
    /* phủ lên thẻ cha width và height : 100% và top left: 0 */
    width: 100%;
    height: 100%;
    background-color: hsla(210, 8%, 20%, 0.459);
    color: white;
    text-align: right;
    padding: 28px 38px;
}

.gallery__overlay h3 {
    font-size: 2rem;
    font-weight: 550;
    text-transform: uppercase;
    /* ---------------------------- */
    /* xử lý hover cho thẻ figcaption */
    /* tạo trạng thái trước khi rê chuột vô, sử dụng transform: translate để dịch xuống 20px, là vị trí ban đầu, sau khi tạo hover rê chuột vô thì nó sẽ di chuyển từ vị trí này lên vị trí 0 cài đặt mặc định, để tạo hiệu ứng chuyển đổi đi lên */
    transform: translatey(20px);

    /* tạo hiệu ứng chuyển động mượt */
    transition: all .5s;
}

/* chỉnh chữ our nhạt */
.gallery__overlay h3 span {
    font-size: 2rem;
    font-weight: 300;
}

.gallery__overlay p {
    /* thẻ p nằm dưới cùng sử dụng position */
    position: absolute;
    right: 28px;
    bottom: 38px;
    font-size: 0.75rem;
    /* -------------------------- */
    /* cho thẻ p di chuyển xuống vị trí khác */
    transform: translateY(50px);

    /* chỉnh hiệu ứng chuyển động mượt */
    transition: all .5s;
    /* muốn làm ẩn hiện dùng opacity, vì trạng thái ban đầu thẻ p ẩn nên set = 0 */
    opacity: 0;
}

/* xử lý thẻ line ngang, tạo thông qua css, sử dụng selector before và after */
/* before thêm vào trước thẻ chứa 1 thẻ inline */
/* .gallery__overlay h3::before{
    /* thuộc tính mặc định luôn phải có */
/* content: "the ";
} */
/* after thêm vào sau thẻ chứa 1 thẻ inline */
.gallery__overlay h3::after {
    /* thuộc tính mặc định luôn phải có */
    content: "";
    /* khai báo kích thuốc line */
    width: 100%;
    /* độ dày line */
    height: 3px;
    /* thêm màu cho line */
    background-color: white;
    /* vì after là thẻ inline, mà inline không thể xét kích thước dài cao của nó nên chuyển sang block để nó rớt xuống hàng */
    display: block;
    /* ----------------------------- */
    /* cho đường line di chuyển xuống vị trí khác */
    transform: translateY(20px);

    /* chỉnh hiệu ứng chuyển động mượt */
    transition: all .5s;

    /* vì sử dụng transition nên không set ban đầu ẩn bằng display: none, rồi trạng thái hiện là display: block vì sẽ bị giật, nên muốn hiệu ứng mượn mà thì dùng opacity  */
    /* muốn làm ẩn hiện dùng opacity, thẻ line ban đầu ẩn nên set = 0*/
    opacity: 0;
}

/* xử lý hover, thẻ item nhận chuột, thẻ overlay thay đổi */
.gallery__item:hover .gallery__overlay h3 {
    transform: translateY(0);
}

/* xử lý hover hiện lên cho đường line */
.gallery__item:hover .gallery__overlay h3::after {
    transform: translateY(0);
    /* làm hiện lên đường line */
    opacity: 1;
}

/* xử lý hover hiện lên cho thẻ p */
.gallery__item:hover .gallery__overlay p {
    transform: translateY(0);
    /* làm hiện lên thẻ p */
    opacity: 1;
}

/* 7. team */
.team {
    background-color: rgb(56, 39, 78);
}

.team__content {
    display: grid;
    width: 90%;
    grid-template-columns: repeat(3, 1fr);
    /* đẩy khối vô giữa */
    margin: 0 auto;
    /* thêm khoảng cách dưới đáy */
    padding-bottom: 48px;
    /* khoảng gap */
    gap: 30px;
}

.team h2 {
    color: white;
}

.team__item img {
    /* set hình rộng bằng thẻ cha item */
    width: 100%;
    height: 100%;
    display: block;
}

.team__item {
    /* khai báo thẻ cha cho position */
    position: relative;
}

.team__text {
    width: 100%;
    padding: 30px 0 30px 20px;
    background-color: #851641a1;
    color: white;
    position: absolute;
    bottom: 0;
    /* ----------------- */
    /* khai báo cho hiệu ứng mất text chuyển động mượt */
    transition: all .5s;
}

.team__text p {
    font-size: 0.75rem;
    padding-top: 10px;
    letter-spacing: 2px;
}

.team__overlay {
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    padding: 90px 40px 20px 40px;
    background-color: #0b0b0caf;
    color: white;
    /* ------------------------ */
    /* khai báo để tắt thẻ overlay đi */
    opacity: 0;
    /* -------------- */
    /* khai báo hiệu ứng chuyển động của thẻ overlay khi hover vô thẻ item */
    transition: all 1s;
}

.team__overlay h3 {
    color: rgb(218, 21, 53);
    font-size: 1.2rem;
}

.team__overlay p:first-of-type {
    padding: 20px 0;
    letter-spacing: 2px;
}

.team__overlay p:last-of-type {
    font-size: 0.875rem;
    line-height: 25px;
}

.team__overlay i {
    font-size: 1rem;
    width: 30px;
    height: 30px;
    /* xét line-height bằng với chiều cao để căn giữa theo chiều dọc */
    line-height: 30px;
    /* căn giữa theo chiều ngang */
    text-align: center;
    border: white solid 1px;
    /* khoảng cách của từng icon */
    margin: 20px 5px 0;
    /* ---------------------- */
    /* tạo hiệu ứng chuyển động mượt mà cho icon  */
    transition: all .5s;
}

/* tạo hiệu ứng khi hover, khai báo hiệu ứng chuyển động trong thẻ cha item */
.team__item:hover .team__overlay {
    /* khai báo cho hiện lên */
    opacity: 1;
}

.team__item:hover .team__text {
    /* khai báo cho mất phần text khi hover vô */
    opacity: 0;
}

/* tạo hiệu ứng hover cho icon */
.team__overlay i:hover {
    /* hiệu ứng chuyển màu */
    border: rgb(218, 21, 53) solid 1px;
    color: rgb(218, 21, 53);
    /* hiệu ứng thu phóng icon khi hover */
    font-size: 1.5rem;
    width: 50px;
    height: 50px;
    /* xét line-height bằng với chiều cao để căn giữa theo chiều dọc */
    line-height: 50px;
    /* căn giữa theo chiều ngang */
    text-align: center;
}

/* 8.feedback */
.feedback {
    background-image: url(../img/cc1.jpg);
    background-repeat: no-repeat;
    background-size: cover;
    height: 400px;
}

/* chỉnh chữ cho tiêu đề */
.feedback h2 {
    /* căn chữ vô hình */
    width: 100%;
    /* xét cho chiều ngang thẻ inline h2 để sử dụng text-align */
    text-align: center;
    color: white;
}

.feedback__content {
    width: 80%;
    margin: 0 auto;
    text-align: center;
    color: white;
    font-size: 1.2rem;
    border: rgb(56, 39, 78) solid 3px;
    background-color: #2125298f;
    padding: 30px 0;
}

.feedback__content p {
    padding: 10px 0;
}

.feedback__content p:last-child {
    font-weight: 510;
}

.feedback__content i {
    color: rgb(56, 39, 78);
    font-size: 2rem;
}

/* vào inspect của web để kiểm tra class của dấu chấm tròn, class của nó là .owl-theme .owl-dots .owl-dot span, và chỉnh sửa theo mong muốn, và có hiệu ứng focus giống hover khi đưa chuột vô */

/* 9.contact */

.contact__content form {
    display: grid;
    /* xét chia 2 cột */
    grid-template-columns: repeat(2, 1fr);
    width: 70%;
    margin: 0 auto;
    gap: 15px 30px;
}

.contact__content form input {
    /* chiều cao cho khung điền */
    height: 40px;
    border-radius: 5px;
    /* chỉnh vị trí chữ placeholder */
    padding: 0 10px;
    /* set màu cho viền */
    border: black solid 2px;
    /* thay đổi hiệu ứng chuyển cho box-shadow */
    transition: all 0.5s;
}

.contact__content textarea {
    /* xét gom cột cho thẻ message */
    grid-column: 1 / span 2;
    /* chiều cao thẻ message */
    height: 200px;
    padding: 10px 10px;
    /* không cho người dùng kéo kích thước của textarea bằng thuộc tính resize */
    resize: none;
    /* thay đổi hiệu ứng chuyển cho box-shadow */
    transition: all 0.5s;
}

/* chỉnh placeholder */
.contact__content textarea::placeholder {
    font-weight: bold;
    color: black;
}

.contact__content button {
    /* xét gom cột cho thẻ button */
    grid-column: 1 / span 2;
    height: 50px;
    font-size: 0.875rem;
    padding: 10px 30px;
    /* làm cong góc button */
    border-radius: 5px;
    color: black;
    font-weight: 550;
}

.contact__content button:hover {
    color: white;
    /* đổi màu viền */
    border-color: black;
    background-color: rgb(46, 7, 43);
}

/* focus là hiện tượng click vô ô thì hiện hiệu ứng, tạo hiệu ứng khung viền khi ấn vô ô text, bật trình duyệt web kiểm tra focus thì do thẻ out-line tác động, nên sẽ sửa hiệu ứng trên thẻ out-line */
.contact__content form input:focus {
    /* sử dụng box-shadow tạo bóng phủ ra bên ngoài viền */
    /* thuộc tính đổ bóng cho chữ là text-shadow */
    /* 0 0 0 tương ứng với trục xyz và set đơn vị là px, thay đổi thì độ bóng sẽ thay đổi theo trục xyz */
    /* mặc định là outset */
    /* box-shadow: 0 0 0 0.15rem rgb(45, 134, 161); */
    /* bóng đổ ngược vô trong thì inset */
    box-shadow: inset 0 0 0 0.15rem rgb(45, 134, 161);
}

.contact__content textarea:focus {
    box-shadow: inset 0 0 0 0.15rem rgb(45, 134, 161);
}

/* xử lý info */
.contact__info {
    display: flex;
    width: 100%;
    /* căng canh sát lề trái phải */
    justify-content: space-around;
    text-align: center;
}

.info__item {
    /* tạo khoảng cách giữa các item */
    padding: 0 100px;
}

.info__item i {
    font-size: 2rem;
    color: rgb(56, 39, 78);
}

.info__item p {
    font-size: 0.875rem;
    line-height: 25px;
    padding: 20px 0;
}

/* 11.footer */
footer {
    background-color: black;
    color: white;
}

.footer__content {
    padding: 50px 0;
    display: flex;
    width: 80%;
    margin: 0 auto;
    justify-content: space-around;
}

/* xử lý phần item và h3 chung */
.footer__item {
    width: 40%;
    font-size: 0.7rem;
    margin: 0 20px;
}

.footer__item h3 {
    color: #b85585;
    font-size: 1.3rem;
}

/* xử lý chung cho thẻ p */
.footer__item p {
    padding: 10px 0;
    line-height: 30px;
}

.footer__item i {
    font-size: 1rem;
    width: 30px;
    height: 30px;
    /* xét line-height bằng với chiều cao để căn giữa theo chiều dọc */
    line-height: 30px;
    /* căn giữa theo chiều ngang */
    text-align: center;
    border: white solid 1px;
    /* khoảng cách của từng icon */
    margin: 20px 5px 0;
    /* ---------------------- */
    /* tạo hiệu ứng chuyển động mượt mà cho icon  */
    transition: all .5s;
}

.footer__item i:hover {
    /* hiệu ứng chuyển màu */
    border: rgb(218, 21, 53) solid 1px;
    color: rgb(218, 21, 53);
    /* hiệu ứng thu phóng icon khi hover */
    font-size: 1.5rem;
    width: 50px;
    height: 50px;
    /* xét line-height bằng với chiều cao để căn giữa theo chiều dọc */
    line-height: 50px;
    /* căn giữa theo chiều ngang */
    text-align: center;
}

/* xử lý mục 2 */
/* khai báo class riêng để 2 thẻ p nằm trên cùng 1 hàng */
.item__time {
    display: flex;
    /* cách 2 thẻ ra 2 đầu dùng space-between */
    justify-content: space-between;
    /* set border bottom */
    border-bottom: white dotted 1px;
}

/* xử lý mục 4 */
.footer__item:nth-child(4) input {
    margin: 10px 0;
    height: 40px;
    border-radius: 5px;
}

.footer__item:nth-child(4) button {
    width: 80px;
    height: 30px;
    font-size: 0.875rem;
    /* làm cong góc button */
    border-radius: 5px;
    color: black;
    font-weight: 550;
    border-color: black;
}

.footer__item:nth-child(4) button:hover {
    color: white;
    /* đổi màu viền */
    border-color: black;
    background-color: rgb(46, 7, 43);
}

.footer__item:nth-child(4) input::placeholder {
    font-size: 0.875rem;
    padding: 0 10px;
}

.footer__coppyright {
    text-align: center;
    padding-bottom: 50px;
    font-size: 0.6rem;
}

.footer__coppyright span {
    color: #b85585;
    font-weight: bold;
}

/*12. back to top */
/* để làm đi theo trang web */
.backtotop {
    position: fixed;
    right: 50px;
    bottom: 50px;
    /* ----------------- */
    /* ẩn đi icon khi kéo lên */
    /* opacity ẩn đi chứ vẫn hiện trên trang web, nên dùng thêm visibility để ẩn đi thực tế opacity, khai báo ngược với class cd-top--is-visible */
    visibility: hidden;
    opacity: 0;
}

.backtotop i {

    font-size: 2.5rem;
    color: rgb(46, 7, 43);
    width: 50px;
    height: 50px;
    border: rgb(46, 7, 43) solid 3px;
    text-align: center;
    border-radius: 50%;
}

/* hiện lại nút khi trượt xuống */
.cd-top--is-visible {
    visibility: visible;
    opacity: 1;
}

/* .cd-top--fade-out { // reduce button opacity if user keeps scrolling
    opacity: .5;
  } */


/* khai báo chuỗi chuyển động */
/* đặt tên chuỗi chuyển động cho phù hợp */
/* @keyframes updown{ */
    /* 0% giây đầu tiên để rỗng */
    /* 0%{} */
    /* 50% giây tiếp theo cho phần tử đi lên */
    /* 50%{
        transform: translateY(-20px);
    } */
    /* 100% giây cho đi xuống trở lại */
    /* 100%{
        transform: translateY(0);
    }
} */
/* Một cách viết khác cho keyframs */
@keyframes updown{ 
    /* 0% giây đầu tiên để rỗng  */
    form{
        /* translate thay đổi vị trí, scale là tăng kích thước nhưng ghi chung 1 hàng */
        transform: translateY(0) scale(1);
    }
    /* giây còn lại cho phần tử đi lên */
    to{
        transform: translateY(-10px) scale(1.05);
    }
} 